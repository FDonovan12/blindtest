:root {
    --success-color: hsl(120 100% 25%);
    --error-color: hsl(0 94% 32%);
    --warning-color: hsl(39 97% 37%);
    --color-text: hsl(208 100% 97%);
    --background-color: hsla(0 0% 0% / 0);
    --primary-color: hsl(234 95% 22%);
    --background-gradient: linear-gradient(to right, rgb(3, 14, 107), #666cb6);
    --button-active: hsla(16 97% 26% / 0.4);

    --fs-300: clamp(0.94rem, calc(0.92rem + 0.08vw), 0.98rem);
    --fs-400: clamp(1.13rem, calc(1.06rem + 0.33vw), 1.31rem);
    --fs-500: clamp(1.35rem, calc(1.21rem + 0.69vw), 1.75rem);
    --fs-600: clamp(1.62rem, calc(1.37rem + 1.24vw), 2.33rem);
    --fs-700: clamp(1.94rem, calc(1.54rem + 2.03vw), 3.11rem);
    --fs-800: clamp(2.33rem, calc(1.7rem + 3.15vw), 4.14rem);
    --fs-900: clamp(2.8rem, calc(1.85rem + 4.74vw), 5.52rem);
}

*,
*:before,
*:after {
    color: var(--color-text);
    background-color: transparent;
    border-color: currentColor;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font: inherit;
    animation: back 300ms ease-in-out;
}
img,
picture,
video,
svg {
    display: block;
    max-width: 100%;
    fill: currentColor;
}

html,
body {
    height: 100dvh;
}
body {
    display: flex;
    flex-direction: column;
    font-size: var(--fs-400);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
        sans-serif;
    /* font-family: sans-serif; */
    background: url('1230968-ciel-etoile-gratuit-photo.jpeg');
    background: url('7210104-galaxy-stars-in-the-univers-hors-terre-abstract-graphic-design-wallpaper-card-3d-gratuit-photo.jpg');
    background: url('7359962-galaxy-stars-in-the-univers-hors-terre-abstract-graphic-design-wallpaper-card-3d-gratuit-photo.jpg');
    background-size: cover;
}
h1 {
    font-size: var(--fs-700);
}
h2 {
    font-size: var(--fs-600);
}
h3 {
    font-size: var(--fs-500);
}
h4 {
    font-size: var(--fs-400);
}
main {
    position: relative;
    grid-template-rows: repeat(2, auto) 1fr;
    /* work with the span 3 of content-wrapper to keep the content-wrapper with the 1fr
    in present and audience page and with the form display */
    height: 100%;
    .content-wrapper {
        position: relative;
        grid-row: span 3;
        height: 100%;
    }
}
canvas {
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: -100;
}
/* * {
    background-color: rgba(0, 0, 0, 0.3);
    outline: solid 1px red;
} */
.grid-container {
    --gap: clamp(1rem, 6vw, 3rem);
    --max-content-size: 75ch;
    --feature: minmax(0rem, 5rem);
    --breakout: minmax(0rem, 4rem);
    --partial-content-part: 1;
    --partial-margin-part: 2;
    /* --breakout-size: clamp(0.5rem, 6vw, 3rem);
    --breakout: minmax(var(--breakout-size), 1fr); */

    --partial-total-part: calc(var(--partial-content-part) + var(--partial-margin-part));
    --content: min(var(--max-content-size), 100% - calc((calc(var(--gap))) * 2));
    /* --half-content: minmax(calc(var(--content) / 2), 3fr); */
    /* all the fr value have to be in correspondance with var(--partial-content-part) and  var(--partial-margin-part)*/
    /* --full fr =  --partial-content fr + --partial-margin fr |  var(--partial-content-part) ===  --partial-content fr  |  var(--partial-margin-part) ===  --partial-margin fr */
    --full: minmax(var(--gap), 3fr);
    --partial-content: minmax(calc(var(--content) / calc(2 * var(--partial-total-part)) * var(--partial-content-part)), 1fr);
    --partial-margin: minmax(calc(var(--content) / calc(2 * var(--partial-total-part)) * var(--partial-margin-part)), 2fr);
    /* --partial-content: calc(var(--content) / calc(2 * var(--partial-total-part)) * var(--partial-content-part));
    --partial-margin: calc(var(--content) / calc(2 * var(--partial-total-part)) * var(--partial-margin-part)); */

    display: grid;
    /* grid-template-columns:
        [full-width-start] var(--full)
        [breakout-start] var(--breakout)
        [content-start] var(--half-content)
        [middle]
        var(--half-content) [content-end]
        var(--breakout) [breakout-end]
        var(--full) [full-width-end]; */
    grid-template-columns:
        [full-width-start] var(--full)
        [breakout-start] var(--breakout)
        [content-start] var(--partial-margin)
        [partial-start] var(--partial-content)
        [middle]
        var(--partial-content) [partial-end]
        var(--partial-margin) [content-end]
        var(--breakout) [breakout-end]
        var(--full) [full-width-end];
    row-gap: var(--fs-400);
    > * {
        grid-column: content;
    }
    > .middle-start {
        grid-column-start: middle;
        padding-left: 0.5em;
    }
    > .middle-end {
        grid-column-end: middle;
        padding-right: 0.5em;
    }
    > .partial-start {
        grid-column-start: partial;
        padding-left: 0.5em;
    }
    > .partial-end {
        grid-column-end: partial;
        padding-right: 0.5em;
    }
    > .breakout {
        grid-column: breakout;
    }
    > .breakout-start {
        grid-column-start: breakout;
    }
    > .breakout-end {
        grid-column-end: breakout;
    }
    > .full-width {
        grid-column: full-width;
    }
    > .full-width-start {
        grid-column-start: full-width;
    }
    > .full-width-end {
        grid-column-end: full-width;
    }
}

.basic-grid {
    --number-column: 12;
    --gap-column: calc(0.2em * (12 / var(--number-column)));
    grid-template-columns: repeat(var(--number-column), 1fr);
    grid-auto-rows: 1fr;
    align-items: center;
    &:is(.col-1) {
        --number-column: 1;
    }
    &:is(.col-2) {
        --number-column: 2;
    }
    &:is(.col-3) {
        --number-column: 3;
    }
    &:is(.col-4) {
        --number-column: 4;
    }
    &:is(.col-5) {
        --number-column: 5;
    }
    &:is(.col-6) {
        --number-column: 6;
    }
    &:is(.col-7) {
        --number-column: 7;
    }
    &:is(.col-8) {
        --number-column: 8;
    }
    &:is(.col-9) {
        --number-column: 9;
    }
    &:is(.col-10) {
        --number-column: 10;
    }
    &:is(.col-11) {
        --number-column: 11;
    }
    &:is(.col-12) {
        --number-column: 12;
    }
}
.auto-grid {
    display: grid;
    --base-min-col-size: 120px;
    --base-max-col-size: 150px;
    --min-col-size: var(--base-min-col-size);
    --max-col-size: var(--base-max-col-size);
    --gap-column: calc(0.2em);
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    > * {
        outline: 1px solid green;
        /* max-width: var(--max-col-size); */
    }
}
.auto-grid,
.basic-grid {
    --gap-row: 0.2em;
    display: grid;
    column-gap: var(--gap-column);
    row-gap: var(--gap-row);
    &:is(.gap-0) {
        column-gap: calc(var(--gap-column) * 0);
        row-gap: calc(var(--gap-row) * 0);
    }
    &:is(.gap-1) {
        column-gap: calc(var(--gap-column) * 1);
        row-gap: calc(var(--gap-row) * 1);
    }
    &:is(.gap-2) {
        column-gap: calc(var(--gap-column) * 2);
        row-gap: calc(var(--gap-row) * 2);
    }
    &:is(.gap-3) {
        column-gap: calc(var(--gap-column) * 3);
        row-gap: calc(var(--gap-row) * 3);
    }
    &:is(.gap-4) {
        column-gap: calc(var(--gap-column) * 4);
        row-gap: calc(var(--gap-row) * 4);
    }
    &:is(.gap-5) {
        column-gap: calc(var(--gap-column) * 5);
        row-gap: calc(var(--gap-row) * 5);
    }

    &:is(.gap-col-0) {
        column-gap: calc(var(--gap-column) * 0);
    }
    &:is(.gap-col-1) {
        column-gap: calc(var(--gap-column) * 1);
    }
    &:is(.gap-col-2) {
        column-gap: calc(var(--gap-column) * 2);
    }
    &:is(.gap-col-3) {
        column-gap: calc(var(--gap-column) * 3);
    }
    &:is(.gap-col-4) {
        column-gap: calc(var(--gap-column) * 4);
    }
    &:is(.gap-col-5) {
        column-gap: calc(var(--gap-column) * 5);
    }

    &:is(.gap-row-0) {
        row-gap: calc(var(--gap-row) * 0);
    }
    &:is(.gap-row-1) {
        row-gap: calc(var(--gap-row) * 1);
    }
    &:is(.gap-row-2) {
        row-gap: calc(var(--gap-row) * 2);
    }
    &:is(.gap-row-3) {
        row-gap: calc(var(--gap-row) * 3);
    }
    &:is(.gap-row-4) {
        row-gap: calc(var(--gap-row) * 4);
    }
    &:is(.gap-row-5) {
        row-gap: calc(var(--gap-row) * 5);
    }

    > .col-1 {
        grid-column-end: span 1;
    }
    > .col-2 {
        grid-column-end: span 2;
    }
    > .col-3 {
        grid-column-end: span 3;
    }
    > .col-4 {
        grid-column-end: span 4;
    }
    > .col-5 {
        grid-column-end: span 5;
    }
    > .col-6 {
        grid-column-end: span 6;
    }
    > .col-7 {
        grid-column-end: span 7;
    }
    > .col-8 {
        grid-column-end: span 8;
    }
    > .col-9 {
        grid-column-end: span 9;
    }
    > .col-10 {
        grid-column-end: span 10;
    }
    > .col-11 {
        grid-column-end: span 11;
    }
    > .col-12 {
        grid-column-end: span 12;
    }
    > .row-1 {
        grid-row-end: span 1;
    }
    > .row-2 {
        grid-row-end: span 2;
    }
    > .row-3 {
        grid-row-end: span 3;
    }
    > .row-4 {
        grid-row-end: span 4;
    }
    > .row-5 {
        grid-row-end: span 5;
    }
    > .row-6 {
        grid-row-end: span 6;
    }
    > .row-7 {
        grid-row-end: span 7;
    }
    > .row-8 {
        grid-row-end: span 8;
    }
    > .row-9 {
        grid-row-end: span 9;
    }
    > .row-10 {
        grid-row-end: span 10;
    }
    > .row-11 {
        grid-row-end: span 11;
    }
    > .row-12 {
        grid-row-end: span 12;
    }

    > .start-1 {
        grid-column-start: 2;
    }
    > .start-2 {
        grid-column-start: 3;
    }
    > .start-3 {
        grid-column-start: 4;
    }
    > .start-4 {
        grid-column-start: 5;
    }
    > .start-5 {
        grid-column-start: 6;
    }
    > .start-6 {
        grid-column-start: 7;
    }
    > .start-7 {
        grid-column-start: 8;
    }
    > .start-8 {
        grid-column-start: 9;
    }
    > .start-9 {
        grid-column-start: 10;
    }
    > .start-10 {
        grid-column-start: 11;
    }
    > .start-11 {
        grid-column-start: 12;
    }
    > .start-12 {
        grid-column-start: 12;
    }
}

/* not a good idée for the moment */
.basic-flex {
    --base-min-col-size: 120px;
    --base-max-col-size: 240px;
    --min-col-size: var(--base-min-col-size);
    --max-col-size: var(--base-max-col-size);
    --grow: 0;
    display: flex;
    flex-wrap: wrap;
    &:is(.grow) {
        --grow: 1;
    }
    &:is(.small) {
        --min-col-size: calc(var(--base-min-col-size) / 2);
        --max-col-size: calc(var(--base-max-col-size) / 2);
    }
    > * {
        flex: calc(var(--grow)) 0 var(--min-col-size);
        max-width: var(--max-col-size);
        outline: 1px solid red;
    }
    > .col-2 {
        flex: calc(var(--grow) * 2) 0 calc(var(--min-col-size) * 2);
        max-width: calc(var(--max-col-size) * 2);
    }
}
.center {
    text-align: center;
}
.left {
    text-align: left;
}
.right {
    text-align: right;
}
.d-flex-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.invisible {
    color: transparent;
    background-color: transparent;
    text-shadow: 0 0 0 transparent;
}
.d-none {
    display: none;
}

footer {
    width: 100%;
    background-color: darkgray;
    --color-text: black;
    font-size: var(--fs-300);
}
.all-buttons {
    /* display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-around; */
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(9ch, 1fr));
    > button {
        flex-basis: 0%;
        flex-grow: 1;
        margin: 0.2em;
    }
    &:has(button:focus:focus-visible) button:not(:focus:focus-visible),
    &:has(button:hover) button:not(:hover) {
        filter: blur(1px);
    }
}
button {
    border-radius: 10px;
    background-color: rgba(0, 0, 0, 0.4);
    padding-inline: 0.2em;
    transition: scale ease-in-out 300ms, filter ease-in-out 300ms;
    &:is(:focus:focus-visible, :hover) {
        scale: 1.1;
        z-index: 10;
    }
    &:is(:active, [active]) {
        background-color: var(--button-active);
    }
    &:not(:hover) {
        animation: zIndexHack 100ms;
    }
}

#participants {
    display: flex;
    flex-wrap: wrap;
    > div {
        flex-basis: 20%;
        background-color: var(--background-color);
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 0.4em 0em;
    }
}
.undefined {
    --background-color: var(--primary-color);
    --color-text: aliceblue;
}
.joueur-rouge {
    --background-color: brown;
    --color-text: black;
}
.joueur-noir {
    --background-color: black;
    --color-text: white;
}
.joueur-3 {
    --background-color: rgb(11, 167, 6);
    --color-text: black;
}
.joueur-4 {
    --background-color: rgb(27, 161, 161);
    --color-text: black;
}
.joueur-5 {
    --background-color: rgb(235, 211, 78);
    --color-text: black;
}
.section-details {
    /* display: flex;
    justify-content: space-between;
    > div {
        max-width: 50%;
    } */
    background-color: hsl(0 0 0 / 0.3);
}

.response-pointInfos {
    display: grid;
    /* grid-template-columns: [name-start value-start] 1.5em minmax(10ch, 15ch) minmax(9ch, 15ch) 1fr [value-end]; */
    grid-template-columns: [name-start value-start select-start] minmax(10ch, 1fr) [name-end] minmax(9ch, 15ch) [ icon-start] 1.5em [icon-end value-end select-end];
    grid-template-rows: [name-start select-start] 2fr [icon-start] 1fr [name-end value-start] 1fr [icon-end] 2fr [value-end select-end];
    border: 2px solid;
    border-radius: 10px;
    align-items: center;
    background-color: var(--background-color);
    background-color: hsl(from var(--background-color) h s l / 0.8);
    /* aspect-ratio: 5; */
    /* min-height: fit-content; */
    container-type: normal;
    .response:has(&) {
        height: fit-content;
    }
    * {
        height: 100%;
        vertical-align: middle;
    }
    i {
        display: flex;
        justify-content: center;
        align-items: center;
        grid-area: icon;
        z-index: 1;
    }
    > div:has(select) {
        grid-area: select;
        position: relative;
        &::after,
        &::before {
            content: '';
            position: absolute;
            right: 2em;
            border: 7px solid transparent;
            pointer-events: none;
        }
        &::after {
            top: 52%;
            border-top-color: currentColor;
        }
        &::before {
            bottom: 52%;
            border-bottom-color: currentColor;
        }
    }
    input {
        border: 0;
        border-radius: 0;
        outline: 1px solid black;
    }
    .value-point-infos,
    .name-point-infos {
        padding: 0.2em 0.5em;
        /* font-size: 30cqh; */
        display: flex;
        align-items: center;
    }
    .name-point-infos {
        grid-area: name;
    }
    .value-point-infos {
        grid-area: value;
    }
}
select {
    appearance: none;
    border: none;
    width: 100%;
    height: 100%;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    outline: 0;
    option {
        background-color: var(--background-color);
    }
}
form {
    input {
        min-width: 40ch;
    }
}
input {
    border: 3px solid;
    margin-block: 0.2em;
    border-radius: 5px;
    padding-inline: 0.2em;
    &:valid {
        border-color: var(--success-color);
    }
    &:user-invalid {
        border-color: var(--error-color);
    }
    &:focus:invalid {
        border-color: var(--warning-color);
    }
    &:focus {
        outline: 1px;
    }
}

footer {
    width: 100%;
    background-color: darkgray;
    --color-text: black;
    font-size: var(--fs-300);
}
@keyframes zIndexHack {
    0%,
    100% {
        z-index: 100;
    }
}
