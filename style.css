@layer reset, bootfish, base, layout, component, utilities;

@import url(style/bootfish.css) layer(bootfish);

@layer reset {
}

@layer base {
    :root {
        --color-text: hsl(208 100% 97%);
        --background-color: hsla(0 0% 0% / 0);
        /* --primary-color: hsl(234 95% 22%); */
        --button-active: hsla(16 97% 26% / 0.4);
    }

    body {
        /* display: flex; */
        row-gap: 0;
        flex-direction: column;
        background: url('1230968-ciel-etoile-gratuit-photo.jpeg');
        background: url('7210104-galaxy-stars-in-the-univers-hors-terre-abstract-graphic-design-wallpaper-card-3d-gratuit-photo.jpg');
        background: url('7359962-galaxy-stars-in-the-univers-hors-terre-abstract-graphic-design-wallpaper-card-3d-gratuit-photo.jpg');
        background-size: cover;
    }
}
main {
    /* flex-grow: 1; */
    position: relative;
    grid-template-rows: repeat(2, auto) 1fr;
    /* work with the span 3 of content-wrapper to keep the content-wrapper with the 1fr
in present and audience page and with the form display */
    & .content-wrapper {
        position: relative;
        grid-row: span 3;
    }
}
canvas {
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: -100;
}
/* * {
    background-color: rgba(0, 0, 0, 0.3);
    outline: solid 1px red;
} */

.all-buttons {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(9ch, 1fr));
    & > button {
        margin: 0.2em;
    }
    &:has(button:focus:focus-visible) button:not(:focus:focus-visible),
    &:has(button:hover) button:not(:hover) {
        filter: blur(1px);
    }
}
button {
    border-radius: 0.4em;
    background-color: rgba(0, 0, 0, 0.9);
    padding: 0.2em;
    position: relative;
    &::after {
        content: '';
        position: absolute;
        bottom: 7%;
        width: 0%;
        left: 50%;
        transform: translateX(-50%);
        /* scale: 0 1; */
        /* height: 10px; */
        background-color: #666cb6;
        transition: scale 300ms ease-in-out;
        transition: width 300ms ease-in-out;
    }
    &:where(:focus:focus-visible, :hover) {
        /* scale: 1.3;
        z-index: 10; */
        /* animation: name duration timing-function delay iteration-count direction fill-mode; */
        &::after {
            outline: 1px white solid;
            /* animation: scale-up 300ms ease-in-out infinite; */
            width: 70%;
            /* scale: 1 1; */
        }
    }
    &:where(:active, [active]) {
        background-color: var(--button-active);
    }
    &:not(:hover) {
        animation: zIndexHack 100ms;
    }
}

footer {
    width: 100%;
    background-color: darkgray;
    --color-text: black;
    font-size: var(--fs-300);
}
#participants {
    display: flex;
    flex-wrap: wrap;
    & > div {
        flex-basis: 20%;
        background-color: var(--background-color);
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 0.4em 0em;
    }
}
.undefined {
    --background-color: var(--primary-color);
    --color-text: aliceblue;
}
.joueur-rouge {
    --background-color: hsl(0, 59%, 41%);
    --color-text: black;
}
.joueur-noir {
    --background-color: black;
    --color-text: white;
}
.joueur-3 {
    --background-color: rgb(11, 167, 6);
    --color-text: black;
}
.joueur-4 {
    --background-color: rgb(27, 161, 161);
    --color-text: black;
}
.joueur-5 {
    --background-color: rgb(235, 211, 78);
    --color-text: black;
}
.section-details {
    /* display: flex;
    justify-content: space-between;
    > div {
        max-width: 50%;
    } */
    background-color: hsl(0 0 0 / 0.3);
    backdrop-filter: blur(3px);
    margin-bottom: 1em;
    padding-bottom: 1em;
}

.response-pointInfos {
    display: grid;
    /* grid-template-columns: [name-start value-start] 1.5em minmax(10ch, 15ch) minmax(9ch, 15ch) 1fr [value-end]; */
    grid-template-columns: [name-start value-start select-start] minmax(10ch, 1fr) [name-end] minmax(9ch, 15ch) [ icon-start] 1.5em [icon-end value-end select-end];
    grid-template-rows: [name-start select-start] 2fr [icon-start] 1fr [name-end value-start] 1fr [icon-end] 2fr [value-end select-end];
    border: 2px solid;
    border-radius: 10px;
    align-items: center;
    background-color: var(--background-color);
    background-color: rgb(from var(--background-color) r g b / 0.8);
    transition: all 300ms ease-in-out;
    /* aspect-ratio: 5; */
    /* min-height: fit-content; */
    container-type: normal;
    .response:has(&) {
        height: fit-content;
    }
    & * {
        height: 100%;
        vertical-align: middle;
    }
    & i {
        display: flex;
        justify-content: center;
        align-items: center;
        grid-area: icon;
        z-index: 1;
    }
    & > div:has(select) {
        grid-area: select;
        position: relative;
        &::after,
        &::before {
            content: '';
            position: absolute;
            right: 2em;
            border: 7px solid transparent;
            pointer-events: none;
        }
        &::after {
            top: 52%;
            border-top-color: currentColor;
        }
        &::before {
            bottom: 52%;
            border-bottom-color: currentColor;
        }
    }
    & input {
        border: 0;
        border-radius: 0;
        outline: 1px solid black;
    }
    & .value-point-infos,
    & .name-point-infos {
        padding: 0.2em 0.5em;
        font-size: var(--fs-500);
        /* font-size: 30cqh; */
        /* display: flex;
        align-items: center; */
    }
    & .name-point-infos {
        grid-area: name;
        font-weight: 500;
    }
    & .value-point-infos {
        grid-area: value;
    }
}
select {
    appearance: none;
    border: none;
    width: 100%;
    height: 100%;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    outline: 0;
    & option {
        background-color: var(--background-color);
    }
}
form {
    input {
        min-width: 40ch;
    }
}
input {
    border: 3px solid;
    margin-block: 0.2em;
    border-radius: 5px;
    padding-inline: 0.2em;
    &:valid {
        border-color: var(--success-color);
    }
    &:user-invalid {
        border-color: var(--error-color);
    }
    &:focus:invalid {
        border-color: var(--warning-color);
    }
    &:focus {
        outline: 1px;
    }
}

footer {
    width: 100%;
    background-color: darkgray;
    --color-text: black;
    font-size: var(--fs-300);
}
